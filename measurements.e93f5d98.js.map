{"version":3,"sources":["measurements.js"],"names":["ref","changeFormButtonImperial","document","querySelector","changeFormButtonMetric","changeFormButtonWrap","formImperial","formImperialInputs","querySelectorAll","formImperialSubmit","formMetric","formMetricInputs","submitButtonWrap","gender","localStorage","getItem","onChangeFormToMetric","classList","add","remove","onChangeFormToImperial","onValidation","e","dataType","currentTarget","dataset","type","target","checkingValid","dataName","inputNotification","console","log","saveInputsToStorage","validity","valid","Number","value","getAttribute","textContent","isInteger","sendFormToStorageImperial","preventDefault","keys","input","id","setItem","JSON","stringify","sendFormToStorageMetric","dataFromStorage","getDataFromStorage","loadFromLocalStorage","data","savedData","parse","undefined","error","setGender","button","addEventListener"],"mappings":"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","file":"measurements.e93f5d98.js","sourceRoot":"../src","sourcesContent":["const ref = {\n  changeFormButtonImperial: document.querySelector(\n    '.measurements__select-button[data-action=\"imperial\"]',\n  ),\n  changeFormButtonMetric: document.querySelector(\n    '.measurements__select-button[data-action=\"metric\"]',\n  ),\n  changeFormButtonWrap: document.querySelector('.measurements__select-list'),\n  formImperial: document.querySelector('.measurements__form--imperial'),\n  formImperialInputs: document.querySelectorAll('.measurements__form--imperial input'),\n  formImperialSubmit: document.querySelector('.measurements__form-submit--imperial'),\n  formMetric: document.querySelector('.measurements__form--metric'),\n  formMetricInputs: document.querySelectorAll('.measurements__form--metric input'),\n  submitButtonWrap: document.querySelectorAll('.measurements__form-button-wrap'),\n};\n\nlet gender = localStorage.getItem('gender');\nif (gender === null) {\n  gender = 'female';\n}\n\nloadFromLocalStorage();\nsetGender(gender);\n\nref.changeFormButtonImperial.addEventListener('click', onChangeFormToImperial);\nref.changeFormButtonMetric.addEventListener('click', onChangeFormToMetric);\n\nref.formImperial.addEventListener('change', onValidation);\nref.formImperial.addEventListener('submit', sendFormToStorageImperial);\nref.formMetric.addEventListener('change', onValidation);\nref.formMetric.addEventListener('submit', sendFormToStorageMetric);\n\nfunction onChangeFormToMetric() {\n  ref.changeFormButtonWrap.classList.add('measurements__select-list--metric-active');\n  ref.changeFormButtonMetric.classList.add('measurements__select-button--active');\n  ref.changeFormButtonImperial.classList.remove('measurements__select-button--active');\n  ref.formMetric.classList.add('measurements__form-wrap--metric-active');\n  ref.formImperial.classList.add('measurements__form-wrap--metric-active');\n}\n\nfunction onChangeFormToImperial() {\n  ref.changeFormButtonWrap.classList.remove('measurements__select-list--metric-active');\n  ref.changeFormButtonImperial.classList.add('measurements__select-button--active');\n  ref.changeFormButtonMetric.classList.remove('measurements__select-button--active');\n  ref.formMetric.classList.remove('measurements__form-wrap--metric-active');\n  ref.formImperial.classList.remove('measurements__form-wrap--metric-active');\n}\n\nfunction onValidation(e) {\n  const dataType = e.currentTarget.dataset.type;\n  if (e.target.dataset.type === `${dataType}-age`) {\n    const dataName = `${dataType}-age`;\n    checkingValid(e, dataName, dataType);\n  }\n  if (e.target.dataset.type === `${dataType}-height-cm`) {\n    const dataName = `${dataType}-height-cm`;\n    checkingValid(e, dataName, dataType);\n  }\n  if (e.target.dataset.type === `${dataType}-height-ft`) {\n    const dataName = `${dataType}-height-ft`;\n    checkingValid(e, dataName, dataType);\n  }\n  if (e.target.dataset.type === `${dataType}-height-inch`) {\n    const dataName = `${dataType}-height-inch`;\n    checkingValid(e, dataName, dataType);\n  }\n  if (e.target.dataset.type === `${dataType}-weight`) {\n    const dataName = `${dataType}-weight`;\n    checkingValid(e, dataName, dataType);\n  }\n  if (e.target.dataset.type === `${dataType}-target-weight`) {\n    const dataName = `${dataType}-target-weight`;\n    checkingValid(e, dataName, dataType);\n  }\n}\n\nfunction checkingValid(e, dataName, dataType) {\n  const inputNotification = document.querySelector(\n    `.measurements__form-notification[data-type=\"${dataName}\"]`,\n  );\n  console.log(dataType);\n  saveInputsToStorage(e, dataName, dataType);\n\n  if (!e.target.validity.valid && Number(e.target.value) < Number(e.target.getAttribute('min'))) {\n    inputNotification.textContent = `Please enter a value of at least ${e.target.getAttribute(\n      'min',\n    )}`;\n    inputNotification.classList.add('active');\n  } else if (\n    !e.target.validity.valid &&\n    Number(e.target.value) > Number(e.target.getAttribute('max'))\n  ) {\n    inputNotification.textContent = `Enter a value less than or equal to ${e.target.getAttribute(\n      'max',\n    )}`;\n    inputNotification.classList.add('active');\n  } else if (!Number.isInteger(Number(e.target.value))) {\n    inputNotification.textContent = 'Please enter only whole numbers';\n    inputNotification.classList.add('active');\n  } else {\n    inputNotification.classList.remove('active');\n  }\n}\n\nfunction sendFormToStorageImperial(e) {\n  e.preventDefault();\n  const keys = {};\n\n  for (input of ref.formImperialInputs) {\n    if (!input.validity.valid) {\n      return;\n    }\n    keys[input.id] = input.value;\n  }\n  console.log(keys);\n  localStorage.setItem('measurements-imperic', JSON.stringify(keys));\n}\n\nfunction sendFormToStorageMetric(e) {\n  e.preventDefault();\n  const keys = {};\n\n  for (input of ref.formMetricInputs) {\n    if (!input.validity.valid) {\n      return;\n    }\n    keys[input.id] = input.value;\n  }\n  console.log(keys);\n  localStorage.setItem('measurements-metric', JSON.stringify(keys));\n}\n\nfunction saveInputsToStorage(e, dataName, dataType) {\n  e.preventDefault();\n  const dataFromStorage = getDataFromStorage();\n  const keys = { ...dataFromStorage };\n  console.log(dataType);\n\n  if (dataType === 'imperial') {\n    for (input of ref.formImperialInputs) {\n      keys[input.id] = input.value;\n    }\n  }\n\n  if (dataType === 'metric') {\n    for (input of ref.formMetricInputs) {\n      keys[input.id] = input.value;\n    }\n  }\n\n  console.log(keys);\n  localStorage.setItem('measurements-inputs-save', JSON.stringify(keys));\n}\n\nfunction loadFromLocalStorage() {\n  const data = getDataFromStorage();\n\n  if (data) {\n    for (input of ref.formImperialInputs) {\n      input.value = data[input.id];\n    }\n    for (input of ref.formMetricInputs) {\n      input.value = data[input.id];\n    }\n  }\n}\n\nfunction getDataFromStorage() {\n  try {\n    const savedData = JSON.parse(localStorage.getItem('measurements-inputs-save'));\n    return savedData === null ? undefined : savedData;\n  } catch (error) {}\n}\n\nfunction setGender(gender) {\n  for (button of ref.submitButtonWrap) {\n    gender === 'male'\n      ? button.classList.add('measurements__form-button-wrap--male')\n      : button.classList.add('measurements__form-button-wrap--female');\n  }\n}\n"]}